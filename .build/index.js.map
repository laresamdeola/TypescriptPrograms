{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["\n/*\ntype stringOrNumber = string | Number;\n\ntype PersonObject = {\n  name: string,\n  surname: string,\n  id: stringOrNumber\n}\n\nconst PersonOne : PersonObject = {\n  name: 'Damilare',\n  surname: 'Adeola',\n  id: 2\n}\n\nconst PersonTwo : PersonObject = {\n  name: 'Sholape',\n  surname: 'Ogunjobi',\n  id: 'three'\n}\n\nconst PersonThree : PersonObject = {\n  name: 'Chikam',\n  surname: 'Odi',\n  id: 10\n}\n\nconst PrintPersonOne = (person : PersonObject) => {\n  console.log(`Name: ${person.name}, ID: ${person.id}`)\n}\n\nconst PrintFullName = (person : PersonObject) => {\n  console.log(`Fullname: ${person.name} ${person.surname}`)\n}\n\nPrintPersonOne(PersonTwo)\nPrintFullName(PersonThree\n\n*/\n/*\ntype Book = {\n  title: string | Number,\n  author: string,\n  yearOfPublication: Number | null,\n  publicationHouse: string | null,\n  genre: string | null\n}\n\nconst thingsFallApart : Book = {\n  title: 'Things Fall Apart',\n  author: 'Chinua Achebe',\n  yearOfPublication: 1962,\n  publicationHouse: 'Heinamann',\n  genre: 'Literature'\n}\n\nconst lionAndJewel : Book = {\n  title: 'Lion and the Jewel',\n  author: 'Wole Soyinka',\n  yearOfPublication: 1970,\n  publicationHouse: null,\n  genre: 'Literature'\n}\n\nconst PrintLiterature = (book : Book) => {\n  console.log(`Title: ${book.title},\\n Author: ${book.author}`)\n}\n\nPrintLiterature(thingsFallApart)\n*/\n\n/*\ninterface Poetry {\n  name: string | Number\n  author: string | Number\n  nobel: Boolean\n  genre: string[]\n  age: Number\n}\n\nconst arthur: Poetry = {\n  name: 'Happy As If I Kissed A Girl',\n  author: 'Arthur Rimbaud',\n  nobel: false,\n  genre: ['Romantic', 'Lyrical'],\n  age: 45\n}\n\nconst PrintPoetry = (poet: Poetry) => {\n  console.log(`Name: ${poet.name},\\nAuthor: ${poet.author},\\nNobel Prize: ${poet.nobel},\\nGenre: ${poet.genre[1]},\\nAge: ${poet.age}`)\n}\n\nPrintPoetry(arthur)\n*/\n\n/*\ninterface language {\n  id: number,\n  language: string,\n  englishFirstLanguage: boolean\n}\n\nconst languageOne : language = {\n  id: 1,\n  language: 'Yoruba',\n  englishFirstLanguage: true\n}\n\nconst printLanguage = (lang : language) => {\n  console.log(`${lang.id},\\n${lang.language},\\n${lang.englishFirstLanguage}`)\n}\n\nprintLanguage(languageOne)\n*/\n\ninterface calculator {\n  firstNumber: number,\n  secondNumber: number,\n  action: string \n}\n\nconst calculate : number = (calc : calculator) => {\n  let value : number = 0\n  switch(calc.action){\n    case 'add':\n      value = calc.firstNumber + calc.secondNumber\n      break;\n    case ('substract'):\n      value = calc.firstNumber - calc.secondNumber\n      break;\n    case 'divide':\n      value = calc.firstNumber / calc.secondNumber\n      break;\n    case 'multiply':\n      value = calc.firstNumber * calc.secondNumber\n      break;\n  }\n  return value\n}\n\nconst valueOne = {\n  firstNumber: 100,\n  secondNumber: 1000,\n  action: 'multiply'\n}\n\nconsole.log(calculate(valueOne))"],
  "mappings": "AA0HA,MAAM,YAAqB,CAAC,SAAsB;AAChD,MAAI,QAAiB;AACrB,UAAO,KAAK;AAAA,SACL;AACH,cAAQ,KAAK,cAAc,KAAK;AAChC;AAAA,SACI;AACJ,cAAQ,KAAK,cAAc,KAAK;AAChC;AAAA,SACG;AACH,cAAQ,KAAK,cAAc,KAAK;AAChC;AAAA,SACG;AACH,cAAQ,KAAK,cAAc,KAAK;AAChC;AAAA;AAEJ,SAAO;AAAA;AAGT,MAAM,WAAW;AAAA,EACf,aAAa;AAAA,EACb,cAAc;AAAA,EACd,QAAQ;AAAA;AAGV,QAAQ,IAAI,UAAU;",
  "names": []
}
