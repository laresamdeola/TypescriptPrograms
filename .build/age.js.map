{
  "version": 3,
  "sources": ["../age.ts"],
  "sourcesContent": ["/*\nSimple Program to determine how long one has to live based on average live expectancy and current age.\n\nSteps:\n1. Calculate the current age\n2. A dictionary or list item that contains the average life expectancy in various countries.\n3. The persons nationality\n4. Substract the life expectancy from the current age to know how many years left.\n*/\n\nimport { countryLifeExpectancy } from './data.js'\n\ninterface age {\n  yearOfBirth: number,\n  residentCountry: string,\n  gender: string\n}\n\n/*\nconst countryLifeExpectancy = {\n  HongKong: {\n    male: 82.38,\n    female: 88.17\n  },\n  Japan: {\n    male: 81.91,\n    female: 88.09\n  }\n}\n*/\n\nconst remainingYears = (life: age) => {\n  let date = new Date()\n  let year = date.getFullYear()\n  let currentAge = year - life.yearOfBirth\n  let countryExpectancy = life.residentCountry\n  let lifeExpectancy = 0\n\n  for (let i in countryLifeExpectancy) {\n    if (i == countryExpectancy) {\n      if (life.gender == 'male') {\n        lifeExpectancy = countryLifeExpectancy[i].male - currentAge\n      }\n      if (life.gender == 'female') {\n        lifeExpectancy = countryLifeExpectancy[i].female - currentAge\n      }\n      else {\n        alert('Enter the right country')\n        console.log('Country not in the list')\n      }\n    }\n  }\n\n  return lifeExpectancy.toFixed()\n}\n\nconst satoglu: age = {\n  yearOfBirth: 1989,\n  residentCountry: 'Japan',\n  gender: 'male'\n}\n\nconsole.log(`You have ${remainingYears(satoglu)} years left.`)"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAUA,kBAAsC;AAqBtC,MAAM,iBAAiB,CAAC,SAAc;AACpC,MAAI,OAAO,IAAI;AACf,MAAI,OAAO,KAAK;AAChB,MAAI,aAAa,OAAO,KAAK;AAC7B,MAAI,oBAAoB,KAAK;AAC7B,MAAI,iBAAiB;AAErB,WAAS,KAAK,mCAAuB;AACnC,QAAI,KAAK,mBAAmB;AAC1B,UAAI,KAAK,UAAU,QAAQ;AACzB,yBAAiB,kCAAsB,GAAG,OAAO;AAAA;AAEnD,UAAI,KAAK,UAAU,UAAU;AAC3B,yBAAiB,kCAAsB,GAAG,SAAS;AAAA,aAEhD;AACH,cAAM;AACN,gBAAQ,IAAI;AAAA;AAAA;AAAA;AAKlB,SAAO,eAAe;AAAA;AAGxB,MAAM,UAAe;AAAA,EACnB,aAAa;AAAA,EACb,iBAAiB;AAAA,EACjB,QAAQ;AAAA;AAGV,QAAQ,IAAI,YAAY,eAAe;",
  "names": []
}
